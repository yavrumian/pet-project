apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "service.fullname" . }}
  namespace: {{ .Release.Namespace }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- range $key, $value := . }}
    {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 4 }}
    {{- end }}
  {{- end }}
  labels:
    {{- include "service.defaultLabels" . | nindent 4 }}
    {{- include "service.labels" . | nindent 4 }}
    {{- range $key, $value := .Values.deploymentLabels }}
    {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "service.defaultLabels" . | nindent 6 }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicas }}
  {{- end }}
  strategy:
    type: {{ .Values.updateStrategy }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{if .Values.envconfigmap.filename}}
        checksum/config: {{ .Files.Get .Values.envconfigmap.filename | sha256sum }}
        {{- end }}
        {{- range $key, $value := .Values.podAnnotations }}
        {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 8 }}
        {{- end }}
      labels:
        {{- include "service.defaultLabels" . | nindent 8 }}
        {{- include "service.labels" . | nindent 8 }}
        {{- range $key, $value := .Values.podLabels }}
        {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 8 }}
        {{- end }}
    spec:
      initContainers:
        {{- with .Values.extraInitContainers }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ include "service.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            {{- toYaml .Values.command | nindent 12 }}
          args:
            {{- toYaml .Values.args | nindent 12 }}
          {{- with .Values.lifecycleHooks }}
          lifecycle:
          {{- tpl . $ | nindent 12 }}
          {{- end }}
          env:
            {{- with .Values.Env }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
            - name: SCHEDULER_ENABLED
              value: "{{- not .Values.worker.enabled -}}" 
            {{- range $key, $value := .Values.EnvMap }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- with .Values.EnvFrom }}
          envFrom:
            {{- tpl . $ | nindent 12 }}
          {{- end }}
          ports:
            {{- with .Values.extraPorts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- tpl . $ | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- tpl . $ | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{if .Values.secretproviderclass.enabled}}
          - name: {{ .Values.secretproviderclass.name }}-vol
            mountPath: "/mnt/secrets"
            readOnly: true
         {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
        {{- with .Values.extraContainers }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      enableServiceLinks: {{ .Values.enableServiceLinks }}
      restartPolicy: {{ .Values.restartPolicy }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- tpl . $ | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        {{if .Values.secretproviderclass.enabled}}
        - name: {{ .Values.secretproviderclass.name }}-vol
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Values.secretproviderclass.name }}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
