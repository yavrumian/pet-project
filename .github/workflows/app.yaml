name: Build and Push to ECR, Deploy to EKS

on:
  push:
    paths:
      - helm-charts/**
      - app-code/**
      - Dockerfile
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  ROLE_TO_ASSUME: arn:aws:iam::123456789:role/actions
  CLSUTER_NAME: naviteq-development-eks
  SHA1: ${{github.sha}}
  APP_NAMESPACE: development
  AWS_REGION: ap-northeast-3
  AWS_ACCOUNT_ID: 617686195573
  PROJECT_NAME: development-python-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.ROLE_TO_ASSUME }}
        role-session-name: tempsession
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      run: aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

    - name: Build and push Docker image to ECR
      run: |
        docker build -t ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.PROJECT_NAME }}:${{ github.sha }} .
        docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.PROJECT_NAME }}:${{ github.sha }}


  helm-deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Populate env values
      run: echo "$(envsubst < ./helm-charts/env-values.yaml)" > ./helm-charts/env-values.yaml

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.ROLE_TO_ASSUME }}
        role-session-name: tempsession
        aws-region: ${{ env.AWS_REGION }}

    - name: Configure kubeconfig for Helm
      run: aws eks --region ${{ env.AWS_REGION }} update-kubeconfig --name ${{ env.CLSUTER_NAME }}

    - name: Helm Install
      run: helm upgrade --install ${{ env.PROJECT_NAME }} ./helm-charts --values ./helm-charts/env-values.yaml --namespace ${{ env.APP_NAMESPACE }} --debug

